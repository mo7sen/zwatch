[gd_scene load_steps=11 format=2]

[ext_resource path="res://Player/player_controller.gd" type="Script" id=1]
[ext_resource path="res://Player/ArmedArms.tscn" type="PackedScene" id=2]
[ext_resource path="res://Player/Healthbar.gd" type="Script" id=3]
[ext_resource path="res://Player/Crosshair.gd" type="Script" id=4]
[ext_resource path="res://Player/Crosshair2.shader" type="Shader" id=5]
[ext_resource path="res://Player/Panel.gd" type="Script" id=6]

[sub_resource type="CapsuleShape" id=1]
radius = 0.6
height = 3.0

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 5 )
shader_param/crosshair_color = null

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

float plot(vec2 uv, float eqn) {
  float lineWidth = 0.02;
  float smoothing = 0.05;
  // float smoothing = 0.0;
  float g2 = 0.0;
  g2 += smoothstep( eqn + lineWidth - smoothing, eqn + lineWidth, uv.y);
  g2 += 1.0 - smoothstep(eqn - lineWidth - smoothing, eqn - lineWidth, uv.y);
  g2 = 1.0 - g2;
  return g2;
}

float plotx(vec2 uv, float eqn) {
  float lineWidth = 0.3;
  // float smoothing = 0.05;
  float smoothing = 0.1;
  float g2 = 0.0;
  g2 += smoothstep( eqn + lineWidth - smoothing, eqn + lineWidth, uv.x);
  g2 += 1.0 - smoothstep(eqn - lineWidth - smoothing, eqn - lineWidth, uv.x);
  g2 = 1.0 - g2;
  return g2;
}

float smooth_rect(vec2 uv, vec2 pos, vec2 size, float smoothing) {
  vec2 col = smoothstep(pos - size, pos - size + smoothing, uv);
  col *= smoothstep(1.0 - pos - size, 1.0 - pos - size + smoothing, 1.0 - uv);
  return col.x * col.y;
}

float rect(vec2 uv, vec2 pos, vec2 size) {
  return smooth_rect(uv, pos, size, 0.0);
}

float wire_rect(vec2 uv, vec2 pos, vec2 size, float line_width) {
  return rect(uv, pos, size) - rect(uv, pos, size - line_width);
}

float circle(vec2 uv, vec2 center, float radius, float smoothing) {
  return 1.0 - smoothstep(radius - smoothing, radius, distance(center, uv));
}

uniform float health;

void fragment() {
  vec2 uv = UV;
  float x = uv.x; float y = uv.y;

  float max_health = 100.0;

  vec4 color = vec4(0.0);

  float hp = clamp(0.0, 1.0, health / max_health);

  vec4 healthbar_col = vec4(1.0 - hp, hp, 0.0, 1.0) * (1.0 - step(hp, uv.x));

  color += healthbar_col;

  x -= hp * 0.5;
  x *= 5.0;

  float eqn = sin(70.0 * x)/(5.0 * 70.0 * x) + sin(70.0 * x)/7.0;
  float mask = step(0.992, 1.0 - pow(x, 2.0));
  eqn *= mask;
  float glow = plotx(uv, mod((TIME / hp) - x, 8.0));
  eqn *= 1.5;
  eqn += 0.5;

  color.xyz *= abs(pow(y + 0.1, 2.0));
  color.xyz *= abs(sin(TIME / hp)) / 5.0 + 0.8;
  color += plot(uv, eqn) * glow * healthbar_col;
  color *= smooth_rect(uv, vec2(0.5), vec2(0.5), 0.2);

  COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/health = null

[node name="Player" type="KinematicBody" groups=[
"Player",
]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.71402, 0 )
collision_layer = 2
collision_mask = 3
script = ExtResource( 1 )
head_path = NodePath("Head")
cam_path = NodePath("Head/Camera")

[node name="Collision" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0.127578, 0 )
shape = SubResource( 1 )

[node name="Head" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )

[node name="Camera" type="Camera" parent="Head"]
keep_aspect = 0
current = true
fov = 80.0
far = 1000.0

[node name="RayCast" type="RayCast" parent="Head/Camera"]
enabled = true
cast_to = Vector3( 0, 0, -1000 )
collision_mask = 7

[node name="ArmedArms" parent="Head" instance=ExtResource( 2 )]
transform = Transform( -1, 0, -3.25841e-07, 2.78663e-08, 0.996336, -0.0855213, 3.24647e-07, -0.0855213, -0.996336, 0.2, -0.17, -0.25 )
target_raycast = NodePath("../Camera/RayCast")
ammo_label_path = NodePath("../../CanvasLayer/Control/AmmoPanel/AmmoLabel")

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Control" type="Control" parent="CanvasLayer"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 0.793701
margin_right = 0.793701
script = ExtResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AmmoPanel" type="Panel" parent="CanvasLayer/Control"]
pause_mode = 2
anchor_top = 1.0
anchor_bottom = 1.0
margin_top = -30.0
margin_right = 77.0
margin_bottom = 9.0
rect_scale = Vector2( 2, 2 )
rect_pivot_offset = Vector2( 0, 50 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AmmoLabel" type="Label" parent="CanvasLayer/Control/AmmoPanel"]
anchor_left = 0.25
anchor_top = 0.5
anchor_right = 0.25
anchor_bottom = 0.5
margin_left = -20.0
margin_top = -20.0
margin_right = 20.0
margin_bottom = 20.0
text = "0/0"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Crosshair" type="ColorRect" parent="CanvasLayer/Control"]
material = SubResource( 2 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -15.0
margin_top = -15.0
margin_right = 15.0
margin_bottom = 15.0
script = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}
crosshair_color = Color( 1, 0, 0, 0.572549 )

[node name="Healthbar" type="ColorRect" parent="CanvasLayer/Control"]
material = SubResource( 4 )
anchor_left = 0.5
anchor_right = 0.5
margin_left = -200.595
margin_top = 30.0
margin_right = 199.405
margin_bottom = 70.0
rect_pivot_offset = Vector2( 200, 0 )
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Score" type="Label" parent="CanvasLayer/Control"]
margin_left = 7.14331
margin_top = 5.5559
margin_right = 93.1433
margin_bottom = 30.5559
rect_scale = Vector2( 2, 2 )
text = "Score: 0"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="EndGamePanel" type="Panel" parent="CanvasLayer/Control"]
pause_mode = 2
visible = false
margin_left = 252.696
margin_top = 87.6646
margin_right = 809.696
margin_bottom = 479.665
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Score" type="Label" parent="CanvasLayer/Control/EndGamePanel"]
margin_left = 141.773
margin_top = 52.8204
margin_right = 231.773
margin_bottom = 77.8204
rect_scale = Vector2( 3, 3 )
text = "Score: 0"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HeadShotScore" type="Label" parent="CanvasLayer/Control/EndGamePanel"]
margin_left = 71.1336
margin_top = 167.113
margin_right = 157.134
margin_bottom = 192.113
text = "Headshots: 0"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="EnemiesKilledScore" type="Label" parent="CanvasLayer/Control/EndGamePanel"]
margin_left = 71.9273
margin_top = 228.228
margin_right = 233.927
margin_bottom = 253.228
text = "Enemies Killed: 0"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="EndButton" type="Button" parent="CanvasLayer/Control/EndGamePanel"]
margin_left = 176.556
margin_top = 282.157
margin_right = 387.556
margin_bottom = 348.157
text = "End"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PausePanel" type="Panel" parent="CanvasLayer/Control"]
pause_mode = 2
margin_left = 252.696
margin_top = 87.6646
margin_right = 809.696
margin_bottom = 479.665
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Title" type="Label" parent="CanvasLayer/Control/PausePanel"]
margin_right = 185.0
margin_bottom = 40.0
rect_scale = Vector2( 3, 3 )
text = "Paused"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ResumeButton" type="Button" parent="CanvasLayer/Control/PausePanel"]
anchor_top = -0.00202475
anchor_bottom = -0.00202475
margin_left = 175.0
margin_top = 200.0
margin_right = 375.0
margin_bottom = 270.0
text = "Resume"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="QuitButton" type="Button" parent="CanvasLayer/Control/PausePanel"]
margin_left = 175.0
margin_top = 299.293
margin_right = 375.0
margin_bottom = 369.293
text = "Quit"
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="pressed" from="CanvasLayer/Control/EndGamePanel/EndButton" to="CanvasLayer/Control" method="_on_EndButton_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/PausePanel/ResumeButton" to="CanvasLayer/Control" method="_on_ResumeButton_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/PausePanel/QuitButton" to="CanvasLayer/Control" method="_on_QuitButton_pressed"]
